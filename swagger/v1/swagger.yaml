openapi: 3.0.1
info:
  title: Hospital Management API
  version: v1
  description: API для управления больницей - пациенты, врачи, расчеты BMR и BMI
  contact:
    name: Hospital API Support
servers:
  - url: http://localhost:3000
    description: Development server
paths:
  /patients:
    get:
      tags:
        - Patients
      summary: Получить список пациентов
      description: Возвращает список пациентов с поддержкой фильтрации и пагинации
      parameters:
        - name: full_name
          in: query
          schema:
            type: string
          description: Поиск по ФИО
        - name: gender
          in: query
          schema:
            type: string
            enum: [male, female]
          description: Фильтр по полу
        - name: start_age
          in: query
          schema:
            type: integer
          description: Минимальный возраст
        - name: end_age
          in: query
          schema:
            type: integer
          description: Максимальный возраст
        - name: min_height
          in: query
          schema:
            type: integer
          description: Минимальный рост
        - name: max_height
          in: query
          schema:
            type: integer
          description: Максимальный рост
        - name: min_weight
          in: query
          schema:
            type: integer
          description: Минимальный вес
        - name: max_weight
          in: query
          schema:
            type: integer
          description: Максимальный вес
        - name: doctor_id
          in: query
          schema:
            type: integer
          description: ID врача
        - name: limit
          in: query
          schema:
            type: integer
          description: Количество записей (максимум 20)
        - name: offset
          in: query
          schema:
            type: integer
          description: Смещение
      responses:
        '200':
          description: Список пациентов получен
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Patient'
                  meta:
                    type: object
                    properties:
                      total:
                        type: integer
                      limit:
                        type: integer
                      offset:
                        type: integer
    post:
      tags:
        - Patients
      summary: Создать пациента
      description: Создает нового пациента
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                patient:
                  type: object
                  properties:
                    first_name:
                      type: string
                      example: Иван
                    last_name:
                      type: string
                      example: Иванов
                    middle_name:
                      type: string
                      example: Иванович
                    birthday:
                      type: string
                      format: date
                      example: '1990-01-01'
                    gender:
                      type: string
                      enum: [male, female]
                      example: male
                    height:
                      type: integer
                      example: 180
                    weight:
                      type: integer
                      example: 75
                    doctor_ids:
                      type: array
                      items:
                        type: integer
                  required: [first_name, last_name, birthday, gender, height, weight]
      responses:
        '201':
          description: Пациент создан
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Patient'
        '422':
          description: Ошибка валидации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /patients/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        description: ID пациента
    get:
      tags:
        - Patients
      summary: Получить пациента по ID
      description: Возвращает информацию о пациенте с его врачами
      responses:
        '200':
          description: Пациент найден
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - $ref: '#/components/schemas/Patient'
                      - type: object
                        properties:
                          doctors:
                            type: array
                            items:
                              $ref: '#/components/schemas/Doctor'
        '404':
          description: Пациент не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - Patients
      summary: Обновить пациента
      description: Обновляет информацию о пациенте
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                patient:
                  type: object
                  properties:
                    first_name:
                      type: string
                    last_name:
                      type: string
                    middle_name:
                      type: string
                    birthday:
                      type: string
                      format: date
                    gender:
                      type: string
                      enum: [male, female]
                    height:
                      type: integer
                    weight:
                      type: integer
                    doctor_ids:
                      type: array
                      items:
                        type: integer
      responses:
        '200':
          description: Пациент обновлен
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Patient'
        '404':
          description: Пациент не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Ошибка валидации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Patients
      summary: Удалить пациента
      description: Удаляет пациента
      responses:
        '200':
          description: Пациент удален
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Пациент не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /patients/{id}/bmr:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        description: ID пациента
    post:
      tags:
        - Patients
      summary: Рассчитать BMR для пациента
      description: Рассчитывает базовый метаболизм для пациента по указанной формуле
      parameters:
        - name: formula
          in: query
          required: true
          schema:
            type: string
            enum: [mifflin_san_jeor, harris_benedict]
          description: Формула для расчета BMR
      responses:
        '200':
          description: BMR рассчитан
          content:
            application/json:
              schema:
                type: object
                properties:
                  patient_id:
                    type: integer
                  formula:
                    type: string
                  value:
                    type: number
                    format: float
                  computed_at:
                    type: string
                    format: date-time
        '404':
          description: Пациент не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Ошибка валидации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /patients/{id}/bmr_history:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        description: ID пациента
    get:
      tags:
        - Patients
      summary: Получить историю расчетов BMR
      description: Возвращает историю всех расчетов BMR для пациента
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
          description: Количество записей
        - name: offset
          in: query
          schema:
            type: integer
          description: Смещение
      responses:
        '200':
          description: История BMR получена
          content:
            application/json:
              schema:
                type: object
                properties:
                  patient_id:
                    type: integer
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/BmrCalculation'
                  meta:
                    type: object
                    properties:
                      total:
                        type: integer
                      limit:
                        type: integer
                      offset:
                        type: integer
        '404':
          description: Пациент не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /patients/{id}/bmi:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        description: ID пациента
    get:
      tags:
        - Patients
      summary: Получить BMI для пациента
      description: Рассчитывает BMI для пациента через внешний API
      responses:
        '200':
          description: BMI рассчитан
          content:
            application/json:
              schema:
                type: object
                properties:
                  bmi:
                    type: number
                    format: float
                  category:
                    type: string
                  status:
                    type: string
        '404':
          description: Пациент не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Ошибка валидации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '502':
          description: Ошибка внешнего API
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /doctors:
    get:
      tags:
        - Doctors
      summary: Получить список врачей
      description: Возвращает список врачей с поддержкой пагинации
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
          description: Количество записей (максимум 20)
        - name: offset
          in: query
          schema:
            type: integer
          description: Смещение
      responses:
        '200':
          description: Список врачей получен
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Doctor'
                  meta:
                    type: object
                    properties:
                      total:
                        type: integer
                      limit:
                        type: integer
                      offset:
                        type: integer
    post:
      tags:
        - Doctors
      summary: Создать врача
      description: Создает нового врача
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                doctor:
                  type: object
                  properties:
                    first_name:
                      type: string
                      example: Доктор Иван
                    last_name:
                      type: string
                      example: Иванов
                    middle_name:
                      type: string
                      example: Иванович
                  required: [first_name, last_name]
      responses:
        '201':
          description: Врач создан
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Doctor'
        '422':
          description: Ошибка валидации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /doctors/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        description: ID врача
    get:
      tags:
        - Doctors
      summary: Получить врача по ID
      description: Возвращает информацию о враче
      responses:
        '200':
          description: Врач найден
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Doctor'
        '404':
          description: Врач не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - Doctors
      summary: Обновить врача
      description: Обновляет информацию о враче
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                doctor:
                  type: object
                  properties:
                    first_name:
                      type: string
                    last_name:
                      type: string
                    middle_name:
                      type: string
      responses:
        '200':
          description: Врач обновлен
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Doctor'
        '404':
          description: Врач не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Ошибка валидации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Doctors
      summary: Удалить врача
      description: Удаляет врача
      responses:
        '200':
          description: Врач удален
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Врач не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /bmi:
    get:
      tags:
        - BMI
      summary: Рассчитать BMI
      description: Рассчитывает индекс массы тела (BMI) через внешний API
      parameters:
        - name: weight
          in: query
          required: true
          schema:
            type: number
            format: float
          description: Вес в килограммах
        - name: height
          in: query
          required: true
          schema:
            type: number
            format: float
          description: Рост в сантиметрах
      responses:
        '200':
          description: BMI рассчитан
          content:
            application/json:
              schema:
                type: object
                properties:
                  bmi:
                    type: number
                    format: float
                    example: 23.44
                  category:
                    type: string
                    example: Normal weight
                  status:
                    type: string
                    example: success
        '400':
          description: Недостаточно параметров
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Both weight and height are required
        '422':
          description: Неверные параметры
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: height must be greater than 0
        '502':
          description: Ошибка внешнего API
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: BMI API returned status 500
components:
  schemas:
    Patient:
      type: object
      properties:
        id:
          type: integer
        first_name:
          type: string
          example: Иван
        last_name:
          type: string
          example: Иванов
        middle_name:
          type: string
          example: Иванович
          nullable: true
        birthday:
          type: string
          format: date
          example: '1990-01-01'
        gender:
          type: string
          enum: [male, female]
          example: male
        height:
          type: integer
          example: 180
        weight:
          type: integer
          example: 75
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required: [first_name, last_name, birthday, gender, height, weight]
    Doctor:
      type: object
      properties:
        id:
          type: integer
        first_name:
          type: string
          example: Доктор Иван
        last_name:
          type: string
          example: Иванов
        middle_name:
          type: string
          example: Иванович
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required: [first_name, last_name]
    BmrCalculation:
      type: object
      properties:
        id:
          type: integer
        patient_id:
          type: integer
        formula:
          type: string
          enum: [mifflin_san_jeor, harris_benedict]
        value:
          type: number
          format: float
        computed_at:
          type: string
          format: date-time
      required: [patient_id, formula, value, computed_at]
    Error:
      type: object
      properties:
        error:
          type: string
        errors:
          type: array
          items:
            type: string
